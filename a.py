# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'a.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import os


class UI_A(QtWidgets.QMainWindow):
    def __init__(self, fa):
        super(UI_A, self).__init__()
        self.is_valid = True # 当前功能检测结果是否符合要求
        self.DATA = {} # 保存当前页面的数据信息
        self.father = fa # 父界面，即系统主界面
        self.path = './tmp/a.txt' # 当前功能实验结果临时文件
        self.setupUi(self)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(800, 334)
        self.gridLayoutWidget = QtWidgets.QWidget(Form)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(20, 40, 141, 71))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout_1 = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout_1.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_1.setObjectName("gridLayout_1")
        self.label_integrity = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_integrity.setAlignment(QtCore.Qt.AlignCenter)
        self.label_integrity.setObjectName("label_integrity")
        self.gridLayout_1.addWidget(self.label_integrity, 0, 0, 1, 2)
        self.radioButton_integrity_right = QtWidgets.QRadioButton(self.gridLayoutWidget)
        self.radioButton_integrity_right.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_integrity_right.sizePolicy().hasHeightForWidth())
        self.radioButton_integrity_right.setSizePolicy(sizePolicy)
        self.radioButton_integrity_right.setObjectName("radioButton_integrity_right")
        self.gridLayout_1.addWidget(self.radioButton_integrity_right, 1, 0, 1, 1)
        self.radioButton_integrity_wrong = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_integrity_wrong.sizePolicy().hasHeightForWidth())
        self.radioButton_integrity_wrong.setSizePolicy(sizePolicy)
        self.radioButton_integrity_wrong.setObjectName("radioButton_integrity_wrong")
        self.gridLayout_1.addWidget(self.radioButton_integrity_wrong, 1, 1, 1, 1)
        self.textEdit_integrity = QtWidgets.QTextEdit(Form)
        self.textEdit_integrity.setGeometry(QtCore.QRect(20, 120, 140, 50))
        self.textEdit_integrity.setObjectName("textEdit_integrity")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(190, 40, 141, 71))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.radioButton_damage_right = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        self.radioButton_damage_right.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_damage_right.sizePolicy().hasHeightForWidth())
        self.radioButton_damage_right.setSizePolicy(sizePolicy)
        self.radioButton_damage_right.setObjectName("radioButton_damage_right")
        self.gridLayout_2.addWidget(self.radioButton_damage_right, 1, 0, 1, 1)
        self.radioButton_damage_wrong = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_damage_wrong.sizePolicy().hasHeightForWidth())
        self.radioButton_damage_wrong.setSizePolicy(sizePolicy)
        self.radioButton_damage_wrong.setObjectName("radioButton_damage_wrong")
        self.gridLayout_2.addWidget(self.radioButton_damage_wrong, 1, 1, 1, 1)
        self.label_damage = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_damage.setAlignment(QtCore.Qt.AlignCenter)
        self.label_damage.setObjectName("label_damage")
        self.gridLayout_2.addWidget(self.label_damage, 0, 0, 1, 2)
        self.textEdit_damage = QtWidgets.QTextEdit(Form)
        self.textEdit_damage.setGeometry(QtCore.QRect(190, 120, 140, 50))
        self.textEdit_damage.setObjectName("textEdit_damage")
        self.textEdit_clarity = QtWidgets.QTextEdit(Form)
        self.textEdit_clarity.setGeometry(QtCore.QRect(360, 120, 140, 50))
        self.textEdit_clarity.setObjectName("textEdit_clarity")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(360, 40, 141, 71))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_clarity = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_clarity.setAlignment(QtCore.Qt.AlignCenter)
        self.label_clarity.setObjectName("label_clarity")
        self.gridLayout_3.addWidget(self.label_clarity, 0, 0, 1, 2)
        self.radioButton_clarity_wrong = QtWidgets.QRadioButton(self.gridLayoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_clarity_wrong.sizePolicy().hasHeightForWidth())
        self.radioButton_clarity_wrong.setSizePolicy(sizePolicy)
        self.radioButton_clarity_wrong.setObjectName("radioButton_clarity_wrong")
        self.gridLayout_3.addWidget(self.radioButton_clarity_wrong, 1, 1, 1, 1)
        self.radioButton_clarity_right = QtWidgets.QRadioButton(self.gridLayoutWidget_3)
        self.radioButton_clarity_right.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_clarity_right.sizePolicy().hasHeightForWidth())
        self.radioButton_clarity_right.setSizePolicy(sizePolicy)
        self.radioButton_clarity_right.setObjectName("radioButton_clarity_right")
        self.gridLayout_3.addWidget(self.radioButton_clarity_right, 1, 0, 1, 1)
        self.gridLayoutWidget_4 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(540, 10, 231, 71))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_press_max = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_press_max.setAlignment(QtCore.Qt.AlignCenter)
        self.label_press_max.setObjectName("label_press_max")
        self.gridLayout_4.addWidget(self.label_press_max, 1, 0, 1, 1)
        self.label_press = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_press.setAlignment(QtCore.Qt.AlignCenter)
        self.label_press.setObjectName("label_press")
        self.gridLayout_4.addWidget(self.label_press, 0, 0, 1, 2)
        self.lineEdit_press_max = QtWidgets.QLineEdit(self.gridLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_press_max.sizePolicy().hasHeightForWidth())
        self.lineEdit_press_max.setSizePolicy(sizePolicy)
        self.lineEdit_press_max.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_press_max.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_press_max.setObjectName("lineEdit_press_max")
        self.gridLayout_4.addWidget(self.lineEdit_press_max, 1, 1, 1, 1)
        self.label_press_min = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_press_min.setAlignment(QtCore.Qt.AlignCenter)
        self.label_press_min.setObjectName("label_press_min")
        self.gridLayout_4.addWidget(self.label_press_min, 2, 0, 1, 1)
        self.lineEdit_press_min = QtWidgets.QLineEdit(self.gridLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_press_min.sizePolicy().hasHeightForWidth())
        self.lineEdit_press_min.setSizePolicy(sizePolicy)
        self.lineEdit_press_min.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_press_min.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_press_min.setObjectName("lineEdit_press_min")
        self.gridLayout_4.addWidget(self.lineEdit_press_min, 2, 1, 1, 1)
        self.gridLayoutWidget_5 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(540, 110, 236, 71))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_match = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.label_match.setAlignment(QtCore.Qt.AlignCenter)
        self.label_match.setObjectName("label_match")
        self.gridLayout_5.addWidget(self.label_match, 0, 0, 1, 2)
        self.radioButton_match_right = QtWidgets.QRadioButton(self.gridLayoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_match_right.sizePolicy().hasHeightForWidth())
        self.radioButton_match_right.setSizePolicy(sizePolicy)
        self.radioButton_match_right.setMinimumSize(QtCore.QSize(0, 25))
        self.radioButton_match_right.setMaximumSize(QtCore.QSize(16777215, 25))
        self.radioButton_match_right.setObjectName("radioButton_match_right")
        self.gridLayout_5.addWidget(self.radioButton_match_right, 1, 0, 1, 1)
        self.radioButton_match_wrong = QtWidgets.QRadioButton(self.gridLayoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_match_wrong.sizePolicy().hasHeightForWidth())
        self.radioButton_match_wrong.setSizePolicy(sizePolicy)
        self.radioButton_match_wrong.setObjectName("radioButton_match_wrong")
        self.gridLayout_5.addWidget(self.radioButton_match_wrong, 1, 1, 1, 1)
        self.textEdit_match = QtWidgets.QTextEdit(Form)
        self.textEdit_match.setGeometry(QtCore.QRect(540, 190, 230, 50))
        self.textEdit_match.setObjectName("textEdit_match")
        self.gridLayoutWidget_6 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(540, 250, 151, 71))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.gridLayoutWidget_6)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.radioButton_cuff_right = QtWidgets.QRadioButton(self.gridLayoutWidget_6)
        self.radioButton_cuff_right.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_cuff_right.sizePolicy().hasHeightForWidth())
        self.radioButton_cuff_right.setSizePolicy(sizePolicy)
        self.radioButton_cuff_right.setObjectName("radioButton_cuff_right")
        self.gridLayout_6.addWidget(self.radioButton_cuff_right, 1, 0, 1, 1)
        self.radioButton_cuff_wrong = QtWidgets.QRadioButton(self.gridLayoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_cuff_wrong.sizePolicy().hasHeightForWidth())
        self.radioButton_cuff_wrong.setSizePolicy(sizePolicy)
        self.radioButton_cuff_wrong.setObjectName("radioButton_cuff_wrong")
        self.gridLayout_6.addWidget(self.radioButton_cuff_wrong, 1, 1, 1, 1)
        self.label_cuff = QtWidgets.QLabel(self.gridLayoutWidget_6)
        self.label_cuff.setAlignment(QtCore.Qt.AlignCenter)
        self.label_cuff.setObjectName("label_cuff")
        self.gridLayout_6.addWidget(self.label_cuff, 0, 0, 1, 2)
        self.pushButton_cuff = QtWidgets.QPushButton(Form)
        self.pushButton_cuff.setGeometry(QtCore.QRect(700, 270, 70, 30))
        self.pushButton_cuff.setObjectName("pushButton_cuff")
        self.label_conform = QtWidgets.QLabel(Form)
        self.label_conform.setGeometry(QtCore.QRect(190, 220, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_conform.setFont(font)
        self.label_conform.setStyleSheet("")
        self.label_conform.setText("")
        self.label_conform.setObjectName("label_conform")
        self.frame_1 = QtWidgets.QFrame(Form)
        self.frame_1.setGeometry(QtCore.QRect(10, 35, 160, 180))
        self.frame_1.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_1.setLineWidth(1)
        self.frame_1.setMidLineWidth(0)
        self.frame_1.setObjectName("frame_1")
        self.pushButton_integrity = QtWidgets.QPushButton(self.frame_1)
        self.pushButton_integrity.setGeometry(QtCore.QRect(42, 145, 70, 30))
        self.pushButton_integrity.setObjectName("pushButton_integrity")
        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(180, 35, 160, 180))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(1)
        self.frame_2.setMidLineWidth(0)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_damage = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_damage.setGeometry(QtCore.QRect(42, 145, 70, 30))
        self.pushButton_damage.setObjectName("pushButton_damage")
        self.frame_3 = QtWidgets.QFrame(Form)
        self.frame_3.setGeometry(QtCore.QRect(350, 35, 160, 180))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setLineWidth(1)
        self.frame_3.setMidLineWidth(0)
        self.frame_3.setObjectName("frame_3")
        self.pushButton_clarity = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_clarity.setGeometry(QtCore.QRect(48, 145, 70, 30))
        self.pushButton_clarity.setObjectName("pushButton_clarity")
        self.frame_4 = QtWidgets.QFrame(Form)
        self.frame_4.setGeometry(QtCore.QRect(530, 5, 250, 320))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setLineWidth(1)
        self.frame_4.setMidLineWidth(0)
        self.frame_4.setObjectName("frame_4")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(10, 250, 331, 80))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_clear = QtWidgets.QPushButton(Form)
        self.pushButton_clear.setGeometry(QtCore.QRect(350, 250, 80, 30))
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_return = QtWidgets.QPushButton(Form)
        self.pushButton_return.setGeometry(QtCore.QRect(440, 300, 80, 30))
        self.pushButton_return.setObjectName("pushButton_return")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(10, 220, 130, 30))
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_save = QtWidgets.QPushButton(Form)
        self.pushButton_save.setGeometry(QtCore.QRect(440, 250, 80, 30))
        self.pushButton_save.setObjectName("pushButton_save")
        self.textBrowser_2 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 0, 501, 31))
        self.textBrowser_2.setStyleSheet("background-color:yellow")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.frame_4.raise_()
        self.frame_3.raise_()
        self.frame_2.raise_()
        self.frame_1.raise_()
        self.gridLayoutWidget.raise_()
        self.textEdit_integrity.raise_()
        self.gridLayoutWidget_2.raise_()
        self.textEdit_damage.raise_()
        self.textEdit_clarity.raise_()
        self.gridLayoutWidget_3.raise_()
        self.gridLayoutWidget_4.raise_()
        self.gridLayoutWidget_5.raise_()
        self.textEdit_match.raise_()
        self.gridLayoutWidget_6.raise_()
        self.pushButton_cuff.raise_()
        self.label_conform.raise_()
        self.textBrowser.raise_()
        self.pushButton_clear.raise_()
        self.pushButton_return.raise_()
        self.pushButton.raise_()
        self.pushButton_save.raise_()
        self.textBrowser_2.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_integrity.setText(_translate("Form", "附件完整性检查"))
        self.radioButton_integrity_right.setText(_translate("Form", "完整"))
        self.radioButton_integrity_wrong.setText(_translate("Form", "不完整"))
        self.radioButton_damage_right.setText(_translate("Form", "无"))
        self.radioButton_damage_wrong.setText(_translate("Form", "有"))
        self.label_damage.setText(_translate("Form", "主机有无影响电气性\n"
                                                     "能的机械损伤检查"))
        self.label_clarity.setText(_translate("Form", "设备标识清晰\n"
                                                      "完整性检查"))
        self.radioButton_clarity_wrong.setText(_translate("Form", "有瑕疵"))
        self.radioButton_clarity_right.setText(_translate("Form", "清晰完整"))
        self.label_press_max.setText(_translate("Form", "最大值（kPa）"))
        self.label_press.setText(_translate("Form", "工作压力涵盖范围检查"))
        self.label_press_min.setText(_translate("Form", "最小值（kPa）"))
        self.label_match.setText(_translate("Form", "止血袖带、连接管、接头匹配\n"
                                                    "度和可靠性"))
        self.radioButton_match_right.setText(_translate("Form", "完全匹配"))
        self.radioButton_match_wrong.setText(_translate("Form", "有不匹配情况"))
        self.radioButton_cuff_right.setText(_translate("Form", "是"))
        self.radioButton_cuff_wrong.setText(_translate("Form", "否"))
        self.label_cuff.setText(_translate("Form", "是否配备宽型袖带"))
        self.pushButton_cuff.setText(_translate("Form", "确认"))
        self.pushButton_integrity.setText(_translate("Form", "确认"))
        self.pushButton_damage.setText(_translate("Form", "确认"))
        self.pushButton_clarity.setText(_translate("Form", "确认"))
        self.pushButton_clear.setText(_translate("Form", "还原"))
        self.pushButton_return.setText(_translate("Form", "返回"))
        self.pushButton.setText(_translate("Form", "检查结果"))
        self.pushButton_save.setText(_translate("Form", "保存"))
        self.textBrowser_2.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">请按照说明书所列清单，查验被检止血带机主机外观及附件情况</p></body></html>"))
        
        # ----------------------------------------绑定按钮槽函数---------------------------------------------
        self.pushButton_integrity.clicked.connect(self.a_1_update)
        self.pushButton_damage.clicked.connect(self.a_2_update)
        self.pushButton_clarity.clicked.connect(self.a_3_update)
        self.pushButton_cuff.clicked.connect(self.a_4_update)
        self.pushButton.clicked.connect(self.a_over)
        self.pushButton_clear.clicked.connect(self.a_clear)

        self.pushButton_save.clicked.connect(self.save_file)
        # --------------------------------------------------------------------------------------------------

        # -----------------------------------初始化，调整文本框可视-------------------------------------------
        self.textEdit_integrity.setVisible(False)
        self.textEdit_damage.setVisible(False)
        self.textEdit_clarity.setVisible(False)
        self.textEdit_match.setVisible(False)
        self.label_conform.setVisible(False)
        self.textBrowser.setVisible(False)
        # --------------------------------------------------------------------------------------------------

        # ----------------------------------绑定radio按钮响应事件---------------------------------------------
        self.radioButton_integrity_wrong.clicked.connect(lambda: {self.textEdit_integrity.show()})
        self.radioButton_integrity_right.clicked.connect(lambda: {self.textEdit_integrity.hide()})
        self.radioButton_damage_right.clicked.connect(lambda: {self.textEdit_damage.hide()})
        self.radioButton_damage_wrong.clicked.connect(lambda: {self.textEdit_damage.show()})
        self.radioButton_clarity_wrong.clicked.connect(lambda: {self.textEdit_clarity.show()})
        self.radioButton_clarity_right.clicked.connect(lambda: {self.textEdit_clarity.hide()})
        self.radioButton_match_wrong.clicked.connect(lambda: {self.textEdit_match.show()})
        self.radioButton_match_right.clicked.connect(lambda: {self.textEdit_match.hide()})
        # --------------------------------------------------------------------------------------------------

        # 返回主程序
        self.pushButton_return.clicked.connect(lambda: {self.father.show(), self.close()})

        # 创建一个临时txt
        if os.path.exists(self.path):
            os.remove(self.path)
        file = open(self.path, 'w')
        file.close()

    def a_1_update(self):
        # 附件完整性确认按钮
        if self.radioButton_integrity_right.isChecked():
            self.DATA['附件完整性'] = '完整'
        elif self.radioButton_integrity_wrong.isChecked():
            self.DATA['附件完整性'] = '不完整'
            self.is_valid = False
            if self.textEdit_integrity.toPlainText() == '':
                QMessageBox.information(self, 'info', '请填写缺失附件名称')
                return
        else:
            QMessageBox.information(self, 'info', '请勾选附件完整性检查')
            return

    def a_2_update(self):
        # 机械损伤检查确认按钮
        if self.radioButton_damage_right.isChecked():
            self.DATA['机械损伤'] = '无'
        elif self.radioButton_damage_wrong.isChecked():
            self.DATA['机械损伤'] = '有'
            self.is_valid = False
            if self.textEdit_damage.toPlainText() == '':
                QMessageBox.information(self, 'info', '请描述损伤情况')
                return
        else:
            QMessageBox.information(self, 'info', '请勾选机械损伤检查')
            return

    def a_3_update(self):
        # 设备标识清晰完整性确认按钮
        if self.radioButton_clarity_right.isChecked():
            self.DATA['标识清晰'] = '清晰完整'
        elif self.radioButton_clarity_wrong.isChecked():
            self.DATA['标识清晰'] = '有瑕疵'
            self.is_valid = False
            if self.textEdit_clarity.toPlainText() == '':
                QMessageBox.information(self, 'info', '请填写瑕疵内容描述')
                return
        else:
            QMessageBox.information(self, 'info', '请勾选设备标识清晰性检查')
            return

    def a_4_update(self):
        # 配备袖带确认按钮
        if self.lineEdit_press_max.text() == '' or self.lineEdit_press_min.text() == '':
            QMessageBox.information(self, 'info', '请输入止血带机工作压力范围')
            return
        self.DATA['最大值'] = float(self.lineEdit_press_max.text())
        self.DATA['最小值'] = float(self.lineEdit_press_min.text())
        if self.radioButton_match_right.isChecked():
            self.DATA['匹配度'] = '完全匹配'
        elif self.radioButton_match_wrong.isChecked():
            self.DATA['匹配度'] = '有不匹配情况'
            self.is_valid = False
            if self.textEdit_match.toPlainText() == '':
                QMessageBox.information(self, 'info', '请填写不匹配情况描述')
                return
        else:
            QMessageBox.information(self, 'info', '请勾选匹配度和可靠性检查')
            return

        if self.radioButton_cuff_right.isChecked():
            self.DATA['匹配袖带'] = '是'
        elif self.radioButton_cuff_wrong.isChecked():
            self.DATA['匹配袖带'] = '否'
            self.is_valid = False
        else:
            QMessageBox.information(self, 'info', '请勾选是否配备宽型袖带')
            return

    def a_over(self):
        # 检查结果按钮
        self.a_1_update()
        self.a_2_update()
        self.a_3_update()
        self.a_4_update()
        self.textBrowser.clear()

        # 判断是否有不符合要求的项
        if self.is_valid:
            self.label_conform.setText('符合要求')
            self.label_conform.setStyleSheet("color: green ")
            self.label_conform.repaint()
            self.label_conform.show()
        else:
            self.label_conform.setText('不符合要求')
            self.label_conform.setStyleSheet("color: red ")
            self.label_conform.show()
            self.textBrowser.show()
            if self.radioButton_integrity_wrong.isChecked():
                self.textBrowser.append(self.textEdit_integrity.toPlainText())
            if self.radioButton_damage_wrong.isChecked():
                self.textBrowser.append(self.textEdit_damage.toPlainText())
            if self.radioButton_clarity_wrong.isChecked():
                self.textBrowser.append(self.textEdit_clarity.toPlainText())
            if self.radioButton_match_wrong.isChecked():
                self.textBrowser.append(self.textEdit_match.toPlainText())

    def a_clear(self):
        # 还原按钮
        self.is_valid = True
        self.textEdit_integrity.clear()
        self.textEdit_damage.clear()
        self.textEdit_clarity.clear()
        self.lineEdit_press_max.clear()
        self.lineEdit_press_min.clear()
        self.textEdit_match.clear()
        self.label_conform.clear()
        self.textBrowser.clear()
        self.textEdit_integrity.hide()
        self.textEdit_damage.hide()
        self.textEdit_clarity.hide()
        self.textEdit_match.hide()

    def save_file(self):
        # 保存文件
        with open(self.path, 'w', encoding='utf-8') as writers:
            if self.is_valid:
                # 符合要求
                writers.write('    符合要求\n')
            else:
                writers.write('    不符合要求,备注: ')
                content = self.textBrowser.toPlainText().replace('\n', ';    ')
                writers.write(content)

    def closeEvent(self, event):
        # 重载界面关闭事件
        self.father.resize(800, 400)
        event.accept()
