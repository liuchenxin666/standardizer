# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'h.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import pic_rc
import time, os
import RPi.GPIO as GPIO
import config


class UI_H(QtWidgets.QMainWindow):
    def __init__(self, fa, ADC):
        super(UI_H, self).__init__()
        # 初试设置参数
        self.u_rep = 0.55
        self.u_ps = 0.029
        self.crt_num = None # 当前测的通道序号
        self.crt_cnt = 1 # 当前测的次数
        self.DATA = {} # 保存当前页面的数据信息
        self.father = fa # 父界面，即系统主界面
        self.path = './tmp/h.txt' # 当前功能实验结果临时文件
        self.ADC = ADC # 压力传感器
        self.pwm = GPIO.PWM(config.PUMP_PWM, 20000) # 声明一个 加压器对象

        self.calibration_value = [] # 校准值列表
        self.cuff_value = [] # 袖带压力示值列表
        self.press_value = [] # 压力标准器压力值列表
        
        self.setupUi(self)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(800, 410)
        self.textBrowser_1 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_1.setGeometry(QtCore.QRect(0, 0, 461, 81))
        self.textBrowser_1.setStyleSheet("background-color:yellow\n"
                                         "")
        self.textBrowser_1.setObjectName("textBrowser_1")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(10, 90, 291, 84))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.lineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_2.addWidget(self.lineEdit, 0, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 2, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_3.sizePolicy().hasHeightForWidth())
        self.lineEdit_3.setSizePolicy(sizePolicy)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_3.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_2.addWidget(self.lineEdit_3, 1, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 0, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.gridLayoutWidget_3)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 1, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_2.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_2.addWidget(self.lineEdit_2, 2, 1, 1, 1)
        self.gridLayoutWidget_4 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(320, 91, 131, 71))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_10 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_10.setMinimumSize(QtCore.QSize(0, 30))
        self.label_10.setMaximumSize(QtCore.QSize(16777215, 30))
        self.label_10.setObjectName("label_10")
        self.gridLayout.addWidget(self.label_10, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_2.setMinimumSize(QtCore.QSize(120, 0))
        self.label_2.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 1, 0, 1, 1)
        self.frame_3 = QtWidgets.QFrame(Form)
        self.frame_3.setGeometry(QtCore.QRect(4, 86, 301, 111))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setLineWidth(1)
        self.frame_3.setMidLineWidth(0)
        self.frame_3.setObjectName("frame_3")
        self.pushButton = QtWidgets.QPushButton(self.frame_3)
        self.pushButton.setGeometry(QtCore.QRect(90, 90, 131, 20))
        self.pushButton.setObjectName("pushButton")
        self.frame_4 = QtWidgets.QFrame(Form)
        self.frame_4.setGeometry(QtCore.QRect(315, 86, 141, 111))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setLineWidth(1)
        self.frame_4.setMidLineWidth(0)
        self.frame_4.setObjectName("frame_4")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 90, 121, 20))
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(3, 260, 221, 51))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.gridLayoutWidget_2)
        self.lineEdit_5.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_5.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout_3.addWidget(self.lineEdit_5, 0, 1, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_11.setText("")
        self.label_11.setObjectName("label_11")
        self.gridLayout_3.addWidget(self.label_11, 1, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 0, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_7.setObjectName("label_7")
        self.gridLayout_3.addWidget(self.label_7, 1, 0, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(30, 310, 171, 20))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(Form)
        self.pushButton_4.setGeometry(QtCore.QRect(30, 380, 171, 20))
        self.pushButton_4.setObjectName("pushButton_4")
        self.frame_5 = QtWidgets.QFrame(Form)
        self.frame_5.setGeometry(QtCore.QRect(0, 253, 231, 151))
        self.frame_5.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setLineWidth(1)
        self.frame_5.setMidLineWidth(0)
        self.frame_5.setObjectName("frame_5")
        self.gridLayoutWidget_5 = QtWidgets.QWidget(self.frame_5)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(0, 90, 231, 31))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_13 = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.label_13.setObjectName("label_13")
        self.gridLayout_4.addWidget(self.label_13, 0, 0, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.gridLayoutWidget_5)
        self.lineEdit_6.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEdit_6.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.gridLayout_4.addWidget(self.lineEdit_6, 0, 1, 1, 1)
        self.gridLayoutWidget_6 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(252, 319, 201, 61))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.gridLayoutWidget_6)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_14 = QtWidgets.QLabel(self.gridLayoutWidget_6)
        self.label_14.setObjectName("label_14")
        self.gridLayout_5.addWidget(self.label_14, 0, 0, 1, 1)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.gridLayoutWidget_6)
        self.lineEdit_7.setMinimumSize(QtCore.QSize(120, 0))
        self.lineEdit_7.setMaximumSize(QtCore.QSize(120, 16777215))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.gridLayout_5.addWidget(self.lineEdit_7, 1, 0, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(Form)
        self.pushButton_5.setGeometry(QtCore.QRect(271, 290, 161, 20))
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayoutWidget_7 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_7.setGeometry(QtCore.QRect(251, 260, 201, 31))
        self.gridLayoutWidget_7.setObjectName("gridLayoutWidget_7")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.gridLayoutWidget_7)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_12 = QtWidgets.QLabel(self.gridLayoutWidget_7)
        self.label_12.setText("")
        self.label_12.setObjectName("label_12")
        self.gridLayout_6.addWidget(self.label_12, 0, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.gridLayoutWidget_7)
        self.label_16.setObjectName("label_16")
        self.gridLayout_6.addWidget(self.label_16, 0, 0, 1, 1)
        self.frame_6 = QtWidgets.QFrame(Form)
        self.frame_6.setGeometry(QtCore.QRect(241, 253, 221, 151))
        self.frame_6.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setLineWidth(1)
        self.frame_6.setMidLineWidth(0)
        self.frame_6.setObjectName("frame_6")
        self.pushButton_6 = QtWidgets.QPushButton(Form)
        self.pushButton_6.setGeometry(QtCore.QRect(270, 380, 161, 20))
        self.pushButton_6.setObjectName("pushButton_6")
        self.textBrowser_2 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_2.setGeometry(QtCore.QRect(0, 200, 461, 51))
        self.textBrowser_2.setStyleSheet("background-color:yellow\n"
                                         "")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_png = QtWidgets.QLabel(Form)
        self.label_png.setGeometry(QtCore.QRect(480, 0, 310, 210))
        self.label_png.setText("")
        self.label_png.setPixmap(QtGui.QPixmap(":/resources/device.png"))
        self.label_png.setScaledContents(True)
        self.label_png.setObjectName("label_png")
        self.pushButton_return = QtWidgets.QPushButton(Form)
        self.pushButton_return.setGeometry(QtCore.QRect(710, 370, 80, 30))
        self.pushButton_return.setObjectName("pushButton_return")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(480, 240, 311, 121))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_clear = QtWidgets.QPushButton(Form)
        self.pushButton_clear.setGeometry(QtCore.QRect(480, 370, 80, 30))
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_save = QtWidgets.QPushButton(Form)
        self.pushButton_save.setGeometry(QtCore.QRect(600, 370, 80, 30))
        self.pushButton_save.setObjectName("pushButton_save")
        self.pushButton_7 = QtWidgets.QPushButton(Form)
        self.pushButton_7.setGeometry(QtCore.QRect(480, 210, 130, 30))
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(14)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setStyleSheet("")
        self.pushButton_7.setObjectName("pushButton_7")
        self.frame_6.raise_()
        self.frame_5.raise_()
        self.frame_4.raise_()
        self.frame_3.raise_()
        self.textBrowser_1.raise_()
        self.gridLayoutWidget_3.raise_()
        self.gridLayoutWidget_4.raise_()
        self.gridLayoutWidget_2.raise_()
        self.pushButton_3.raise_()
        self.pushButton_4.raise_()
        self.gridLayoutWidget_6.raise_()
        self.pushButton_5.raise_()
        self.gridLayoutWidget_7.raise_()
        self.pushButton_6.raise_()
        self.textBrowser_2.raise_()
        self.label_png.raise_()
        self.pushButton_return.raise_()
        self.textBrowser.raise_()
        self.pushButton_clear.raise_()
        self.pushButton_save.raise_()
        self.pushButton_7.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle("压力控制抗干扰能力检测")
        self.textBrowser_1.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(1)按图连接止血带机和标准器；(2)将中号止血袖带卷扎在合适尺寸的硬质圆柱上，松紧适宜；</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(2)打开压力发生器、压力标准器和止血袖带气路开关1、3和4，关闭其他开关；</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(3)将止血带机置于校准或手动加压模式(通常为待机状态)</p></body></html>"))
        self.label.setText(_translate("Form", "止血带机通道数(默认为1)"))
        self.label_4.setText(_translate("Form", "止血带机压力示值分辨力(kPa)"))
        self.label_6.setText(_translate("Form", "止血袖带压力上限值(kPa)"))
        self.label_10.setText(_translate("Form", "压力测量值"))
        self.pushButton.setText(_translate("Form", "输入完成确认"))
        self.pushButton_2.setText(_translate("Form", "预实验启动"))
        self.label_5.setText(_translate("Form", "当前通道序号"))
        self.label_7.setText(_translate("Form", "当前压力标准kPa"))
        self.pushButton_3.setText(_translate("Form", "升压示值误差测量"))
        self.pushButton_4.setText(_translate("Form", "输入完成确认"))
        self.label_13.setText(_translate("Form", "止血带机压力示值kPa"))
        self.label_14.setText(_translate("Form", "止血带机压力示值kPa"))
        self.pushButton_5.setText(_translate("Form", "降压示值误差测量"))
        self.label_16.setText(_translate("Form", "当前压力标准kPa"))
        self.pushButton_6.setText(_translate("Form", "输入完成确认"))
        self.textBrowser_2.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(1)按每个通道序号以此进行实验；(2)当前通道未完成禁止进行其他操作；</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(3)每个通道，先进行升压误差测量，再进行降压误差测量；</p></body></html>"))
        self.pushButton_return.setText(_translate("Form", "返回"))
        self.textBrowser.setHtml(_translate("Form",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.pushButton_clear.setText(_translate("Form", "还原"))
        self.pushButton_save.setText(_translate("Form", "保存"))
        self.pushButton_7.setText(_translate("Form", "检测结果"))

        # -----------------------------------初始化，调整文本框可视-------------------------------------------
        self.textBrowser.hide()
        # --------------------------------------------------------------------------------------------------

        # ----------------------------------------绑定按钮槽函数---------------------------------------------
        self.pushButton.clicked.connect(self.h_1)
        self.pushButton_2.clicked.connect(self.h_2)
        self.pushButton_3.clicked.connect(self.h_3)
        self.pushButton_4.clicked.connect(self.h_4)
        self.pushButton_5.clicked.connect(self.h_5)
        self.pushButton_6.clicked.connect(self.h_6)
        self.pushButton_7.clicked.connect(self.h_over)
        self.pushButton_clear.clicked.connect(self.h_clear)
        self.pushButton_save.clicked.connect(self.save_file)
        # --------------------------------------------------------------------------------------------------

        # 返回主程序
        self.pushButton_return.clicked.connect(lambda: {self.father.show(), self.close()})

        # 创建一个临时txt
        if os.path.exists(self.path):
            os.remove(self.path)
        file = open(self.path, 'w')
        file.close()

    def h_1(self):
        # 输入相应参数
        # 如果是数字，先判断是否填写了，如果填写了再判断是否为数字形式
        # 不符合要求进行对话框提醒
        if self.lineEdit.text() == '':
            self.DATA['分辨力'] = 1
            self.lineEdit.setText("1")
        else:
            if self.lineEdit.text().replace(".", "").isdigit():
                self.DATA['分辨力'] = float(self.lineEdit.text())
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

        if self.lineEdit_3.text() == '':
            QMessageBox.information(self, 'info', '请输入压力上限值')
            return
        else:
            if self.lineEdit_3.text().replace(".", "").isdigit():
                self.DATA['上限值'] = float(self.lineEdit_3.text())
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

        if self.lineEdit_2.text() == '':
            self.DATA['通道总数'] = 1
            self.lineEdit_2.setText("1")
        else:
            if self.lineEdit_2.text().replace(".", "").isdigit():
                self.DATA['通道总数'] = float(self.lineEdit_2.text())
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

    def h_2(self):
        # 预实验
        pre_cnt = 0 # 预实验次数，超过两次退出循环
        while True:
            pre_cnt += 1
            if pre_cnt > 2:
                QMessageBox.information(self, 'info', '已进行两次预实验,请进行误差测量实验')
                return

            # 启动加压
            # print(pre_cnt)
            GPIO.output(config.PUMP_EN, GPIO.LOW)
            self.pwm.start(50) # 群里说这个占空比是0~100

            while True:
                time.sleep(0.5)
                # 从硬件读一个压力
                # p_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                p_s = 20
                self.label_2.setText(f'{p_s:.2f}' + "kPa")
                self.label_2.repaint()
                if '上限值' in self.DATA:
                    if p_s >= self.DATA['上限值']:
                        # 停止压力发生器
                        GPIO.output(config.PUMP_EN, GPIO.HIGH) # 给加压器高电平，停止加压
                        self.pwm.stop()

                        time.sleep(10)  # 10s倒计时
                        break
                else:
                    QMessageBox.information(self, 'info', '请确认已输入止血带机参数')
                    return 

            QMessageBox.information(self, 'info', '按压止血带机放气键,将压力降至2kPa以下')
            while True:
                time.sleep(0.5)
                # 从硬件读一个压力
                # p_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                p_s = 18
                self.label_2.setText(f'{p_s:.2f}' + "kPa")
                self.label_2.repaint()
                if p_s <= 20:
                    QMessageBox.information(self, 'info', '止血带机压力降至2kPa以下')
                    break

    def h_3(self):
        # 升压示值误差测量
        # 先判断是否输入了当前测试通道序号
        if self.lineEdit_5.text() == '':
            QMessageBox.information(self, 'info', '请输入当前测试通道序号')
            return
        else:
            if self.lineEdit_5.text().replace(".", "").isdigit():
                self.crt_num = int(self.lineEdit_5.text())
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return
        # 升压误差检测，共5次
        if self.crt_cnt <= 5:
            p_n = 0.2 * self.crt_cnt * self.DATA['上限值']
            self.calibration_value.append(p_n) # 保存本次的校准值

            self.label_11.setText(f'{p_n:.2f}')
            # 启动压力发生器
            GPIO.output(config.PUMP_EN, GPIO.LOW)
            self.pwm.start(50) # 群里说这个占空比是0~100

            while True:
                time.sleep(0.5)
                # 从硬件读一个压力
                # p_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                p_s = 20
                if p_s >= p_n:
                    # 停止压力发生器
                    GPIO.output(config.PUMP_EN, GPIO.HIGH) # 给加压器高电平，停止加压
                    self.pwm.stop()
                    
                    QMessageBox.information(self, 'info', '请输入止血带机第' + str(self.crt_cnt) + '次压力示值')
                    return
        else:
            self.crt_cnt = 1

    def h_4(self):
        # 输入 止血带机压力示值，确认之后再调用 新一次的升压示值误差检测
        if self.lineEdit_6.text() == '':
            QMessageBox.information(self, 'info', '请输入当前止血带机压力示值')
            return
        else:
            if self.lineEdit_6.text().replace(".", "").isdigit():
                up = float(self.lineEdit_6.text())
                # 从硬件读一个压力
                up_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                # delta_up.append(abs(up_s - up))
                self.cuff_value.append(up) # 保存本次的止血带机的示值
                self.press_value.append(up_s) # 保存本次的压力标准器的压力示值
                self.crt_cnt += 1
                self.h_3() # 重新调用一次 升压示值误差检测
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

    def h_5(self):
        # 降压示值误差测量
        # 先判断是否输入了当前测试通道序号
        if self.lineEdit_5.text() == '':
            QMessageBox.information(self, 'info', '请输入当前测试通道序号')
            return
        else:
            if self.lineEdit_5.text().replace(".", "").isdigit():
                self.crt_num = int(self.lineEdit_5.text())
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

        # 降压误差检测，共2次
        if self.crt_cnt <= 2:
            p_n = (1 - 0.2 * self.crt_cnt) * self.DATA['上限值']
            self.calibration_value.append(p_n) # 保存本次的校准值

            self.label_12.setText(f'{p_n:.2f}')
            # 控制开启放气阀门
            QMessageBox.information(self, 'info', '控制开启放气阀门')
            while True:
                time.sleep(0.5)
                # 从硬件读一个压力
                # p_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                p_s = 2
                if p_s <= p_n:  # 降压应该是小于等于吧
                    # 控制关闭放气阀门
                    QMessageBox.information(self, 'info', '控制关闭放气阀门，并输入止血带机第' + str(self.crt_cnt) + '次压力示值')
                    return
        else:
            # 计算不确定度
            # 判断数据是否符合要求 ，5次升压2次降压共7次数据，因此如果长度不是7，就要重新开始实验
            if len(self.press_value) != 7 or len(self.calibration_value) != 7 or len(self.cuff_value) != 7:
                QMessageBox.information(self, 'info', '实验过程有误,请按压放气键使压力将至2kPa以下,重新开始升压实验')
                self.h_clear()
                return
            s = 0
            for a, b in zip(self.cuff_value, self.press_value):
                s += pow((a - b), 2)
            u_1 = pow(pow(self.DATA['分辨力'] / 2, 2) + s / (len(self.press_value) - 1), 0.5)
            u_2 = pow(pow(self.u_ps, 2) + s / (len(self.press_value) - 1), 0.5)
            self.textBrowser.append(
                "    通道" + str(self.crt_num) + "的不确定分量为" + f'{u_1:.2f}' + ", 扩展不确定度为" + f'{u_2:.2f}')
            self.textBrowser.append('   校准值\t\t袖带压力示值\t标准器压力示值')
            for a, b, c in zip(self.calibration_value, self.cuff_value, self.press_value):
                self.textBrowser.append('   ' + f'{a:.2f}' + '\t\t\t' + f'{b:.2f}' + '\t\t\t\t' + f'{c:.2f}')

            # 清空全局变量
            self.crt_cnt = 1
            self.calibration_value = []
            self.cuff_value = []
            self.press_value = []

    def h_6(self):
        # 输入 止血带机压力示值，确认之后再调用 新一次的降压示值误差检测
        if self.lineEdit_7.text() == '':
            QMessageBox.information(self, 'info', '请输入当前止血带机压力示值')
            return
        else:
            if self.lineEdit_7.text().replace(".", "").isdigit():
                dp = float(self.lineEdit_7.text())
                # 从硬件读一个压力
                dp_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器
                # delta_dp.append(abs(dp_s - dp))
                self.cuff_value.append(dp)
                self.press_value.append(dp_s)
                self.crt_cnt += 1
                self.h_5()
            else:
                QMessageBox.information(self, 'info', '请输入正确参数')
                return

    def h_over(self):
        # 检测结果查询按钮
        self.textBrowser.show()

    def h_clear(self):
        # 还原按钮
        self.crt_num = 0
        self.crt_cnt = 1

        self.calibration_value = []
        self.cuff_value = []
        self.press_value = []

        self.lineEdit.clear()
        self.lineEdit_3.clear()
        self.lineEdit_2.clear()
        self.label_2.clear()
        self.lineEdit_5.clear()
        self.label_11.clear()
        self.lineEdit_6.clear()
        self.label_12.clear()
        self.lineEdit_7.clear()
        self.textBrowser.clear()
        self.textBrowser.hide()
    
    def save_file(self):
        # 保存文件
        with open(self.path, 'w', encoding='utf-8') as writers:
            
            content = self.textBrowser.toPlainText().replace('\n', '\n   ')
            writers.write(content)
    
    def closeEvent(self, event):
        # 重载界面关闭事件
        self.father.resize(800, 400)
        event.accept()


# if __name__ == "__main__":
#     import sys

#     app = QtWidgets.QApplication(sys.argv)
#     gui = UI_H()
#     gui.show()
#     sys.exit(app.exec_())
