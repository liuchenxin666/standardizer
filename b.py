# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'b.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import time


class UI_B(QtWidgets.QMainWindow):
    def __init__(self, fa, ADC):
        super(UI_B, self).__init__()
        self.is_valid = True # 当前功能检测结果是否符合要求
        self.father = fa # 父界面，即系统主界面
        self.path = './tmp/b.txt' # 当前功能实验结果临时文件
        self.ADC = ADC # 压力传感器
        self.setupUi(self)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(800, 410)
        self.textBrowser_1 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_1.setGeometry(QtCore.QRect(10, 0, 401, 81))
        self.textBrowser_1.setStyleSheet("background-color:yellow\n"
                                         "")
        self.textBrowser_1.setObjectName("textBrowser_1")
        self.frame_1 = QtWidgets.QFrame(Form)
        self.frame_1.setGeometry(QtCore.QRect(10, 86, 401, 41))
        self.frame_1.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_1.setLineWidth(1)
        self.frame_1.setMidLineWidth(0)
        self.frame_1.setObjectName("frame_1")
        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(10, 140, 401, 41))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(1)
        self.frame_2.setMidLineWidth(0)
        self.frame_2.setObjectName("frame_2")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(20, 146, 381, 31))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.radioButton_2 = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_2.sizePolicy().hasHeightForWidth())
        self.radioButton_2.setSizePolicy(sizePolicy)
        self.radioButton_2.setMinimumSize(QtCore.QSize(70, 0))
        self.radioButton_2.setMaximumSize(QtCore.QSize(70, 16777215))
        self.radioButton_2.setObjectName("radioButton_2")
        self.gridLayout_2.addWidget(self.radioButton_2, 0, 3, 1, 1)
        self.radioButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        self.radioButton.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton.sizePolicy().hasHeightForWidth())
        self.radioButton.setSizePolicy(sizePolicy)
        self.radioButton.setMinimumSize(QtCore.QSize(70, 0))
        self.radioButton.setMaximumSize(QtCore.QSize(70, 16777215))
        self.radioButton.setObjectName("radioButton")
        self.gridLayout_2.addWidget(self.radioButton, 0, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 0, 1, 1, 1)
        self.textBrowser_3 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_3.setGeometry(QtCore.QRect(10, 210, 221, 81))
        self.textBrowser_3.setStyleSheet("background-color:yellow")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.gridLayoutWidget_4 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(260, 215, 141, 71))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_4 = QtWidgets.QLabel(self.gridLayoutWidget_4)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 0, 0, 1, 2)
        self.radioButton_3 = QtWidgets.QRadioButton(self.gridLayoutWidget_4)
        self.radioButton_3.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_3.sizePolicy().hasHeightForWidth())
        self.radioButton_3.setSizePolicy(sizePolicy)
        self.radioButton_3.setObjectName("radioButton_3")
        self.gridLayout_4.addWidget(self.radioButton_3, 1, 0, 1, 1)
        self.radioButton_4 = QtWidgets.QRadioButton(self.gridLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_4.sizePolicy().hasHeightForWidth())
        self.radioButton_4.setSizePolicy(sizePolicy)
        self.radioButton_4.setObjectName("radioButton_4")
        self.gridLayout_4.addWidget(self.radioButton_4, 1, 1, 1, 1)
        self.frame_4 = QtWidgets.QFrame(Form)
        self.frame_4.setGeometry(QtCore.QRect(250, 210, 160, 81))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setLineWidth(1)
        self.frame_4.setMidLineWidth(0)
        self.frame_4.setObjectName("frame_4")
        self.textBrowser_4 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_4.setGeometry(QtCore.QRect(10, 320, 221, 81))
        self.textBrowser_4.setStyleSheet("background-color:yellow\n"
                                         "")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.gridLayoutWidget_5 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(260, 325, 141, 71))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_5 = QtWidgets.QLabel(self.gridLayoutWidget_5)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_5.addWidget(self.label_5, 0, 0, 1, 2)
        self.radioButton_5 = QtWidgets.QRadioButton(self.gridLayoutWidget_5)
        self.radioButton_5.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_5.sizePolicy().hasHeightForWidth())
        self.radioButton_5.setSizePolicy(sizePolicy)
        self.radioButton_5.setObjectName("radioButton_5")
        self.gridLayout_5.addWidget(self.radioButton_5, 1, 0, 1, 1)
        self.radioButton_6 = QtWidgets.QRadioButton(self.gridLayoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton_6.sizePolicy().hasHeightForWidth())
        self.radioButton_6.setSizePolicy(sizePolicy)
        self.radioButton_6.setObjectName("radioButton_6")
        self.gridLayout_5.addWidget(self.radioButton_6, 1, 1, 1, 1)
        self.frame_5 = QtWidgets.QFrame(Form)
        self.frame_5.setGeometry(QtCore.QRect(250, 320, 160, 81))
        self.frame_5.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setLineWidth(1)
        self.frame_5.setMidLineWidth(0)
        self.frame_5.setObjectName("frame_5")
        self.label_conform = QtWidgets.QLabel(Form)
        self.label_conform.setGeometry(QtCore.QRect(640, 210, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_conform.setFont(font)
        self.label_conform.setStyleSheet("")
        self.label_conform.setText("")
        self.label_conform.setObjectName("label_conform")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(420, 250, 351, 101))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_return = QtWidgets.QPushButton(Form)
        self.pushButton_return.setGeometry(QtCore.QRect(690, 360, 80, 30))
        self.pushButton_return.setObjectName("pushButton_return")
        self.pushButton_clear = QtWidgets.QPushButton(Form)
        self.pushButton_clear.setGeometry(QtCore.QRect(420, 360, 80, 30))
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(420, 210, 121, 30))
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(13)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayoutWidget = QtWidgets.QWidget(Form)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(20, 90, 381, 32))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setMinimumSize(QtCore.QSize(80, 0))
        self.label_2.setMaximumSize(QtCore.QSize(80, 30))
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 0, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMinimumSize(QtCore.QSize(120, 30))
        self.pushButton.setMaximumSize(QtCore.QSize(120, 16777215))
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_3.addWidget(self.pushButton, 0, 0, 1, 1)
        self.pushButton_save = QtWidgets.QPushButton(Form)
        self.pushButton_save.setGeometry(QtCore.QRect(560, 360, 80, 30))
        self.pushButton_save.setObjectName("pushButton_save")
        self.frame_1.raise_()
        self.frame_5.raise_()
        self.frame_4.raise_()
        self.textBrowser_1.raise_()
        self.frame_2.raise_()
        self.gridLayoutWidget_2.raise_()
        self.textBrowser_3.raise_()
        self.gridLayoutWidget_4.raise_()
        self.textBrowser_4.raise_()
        self.gridLayoutWidget_5.raise_()
        self.label_conform.raise_()
        self.textBrowser.raise_()
        self.pushButton_return.raise_()
        self.pushButton_clear.raise_()
        self.pushButton_2.raise_()
        self.gridLayoutWidget.raise_()
        self.pushButton_save.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle("一般工作正常性检查") # 界面标题
        self.textBrowser_1.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(1)将成人大号止血袖带缠绕至大号硬质圆柱上</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(2)设置止血带机工作压力为30kPa</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(3)启动加压模式，在止血带机重启结束后，按下其放气键</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(4)观察2min内压力示值≤2kPa</p></body></html>"))
        self.radioButton_2.setText(_translate("Form", "没有"))
        self.radioButton.setText(_translate("Form", "具有"))
        self.label_3.setText(_translate("Form", "阶梯式或脉动式放弃功能检查"))
        self.textBrowser_3.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">提示：设置最短止血时间，启动加压并等待加压及止血过程结束，观察止血结束前和结束时有无声或光提示</p></body></html>"))
        self.label_4.setText(_translate("Form", "提示功能检查"))
        self.radioButton_3.setText(_translate("Form", "有"))
        self.radioButton_4.setText(_translate("Form", "无"))
        self.textBrowser_4.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">提示：止血带机工作压力达到设定值时，关闭设备电源，观察有无放气动作</p></body></html>"))
        self.label_5.setText(_translate("Form", "放气动作检查"))
        self.radioButton_5.setText(_translate("Form", "有"))
        self.radioButton_6.setText(_translate("Form", "无"))
        self.pushButton_return.setText(_translate("Form", "返回"))
        self.pushButton_clear.setText(_translate("Form", "还原"))
        self.pushButton_2.setText(_translate("Form", "检查结果"))
        self.pushButton.setText(_translate("Form", "放气功能检查"))
        self.pushButton_save.setText(_translate("Form", "保存"))

        # -----------------------------------初始化，调整文本框可视-------------------------------------------
        self.textBrowser.hide()
        self.label_conform.hide()
        # --------------------------------------------------------------------------------------------------

        # ----------------------------------------绑定按钮槽函数---------------------------------------------
        self.pushButton.clicked.connect(self.b_1)
        self.pushButton_2.clicked.connect(self.b_over)
        self.pushButton_clear.clicked.connect(self.b_clear)
        self.pushButton_save.clicked.connect(self.save_file)
        # --------------------------------------------------------------------------------------------------

        # 返回主程序
        self.pushButton_return.clicked.connect(lambda: {self.father.show(), self.close()})

        # 创建一个临时txt
        if os.path.exists(self.path):
            os.remove(self.path)
        file = open(self.path, 'w')
        file.close()

    def b_1(self):
        # 放气功能检查
        time_start = time.time()
        while True:
            # 循环先 延时0.5s
            time.sleep(0.5)
            # 硬件读一个压力值
            p_s = self.ADC.ADS1256_GetChannalValue(6) * 500 / 0x7fffff  # 高精度传感器

            # 计算时间间隔
            time_end = time.time()
            t_m = time_end - time_start

            # 更新界面label显示
            self.label.setText(f'{p_s:.2f}' + "kPa")
            self.label.repaint()
            self.label_2.setText(f'{t_m:.2f}' + "s")
            self.label_2.repaint()
            # 判断如果到达2min
            if t_m >= 120:
                self.is_valid = False
                self.label_2.setText("不正常")
                self.label_2.repaint()
                self.label.setText("2min时" + f'{p_s:.2f}' + "kPa")
                self.label.repaint()
                break
            
            # 判断放气功能是否正常
            if p_s <= 2:
                self.label_2.setText("正常")
                self.label_2.repaint()

    def b_over(self):
        # 查询检查结果按钮
        self.textBrowser.clear()

        if not self.is_valid:
            self.textBrowser.append(self.label.text())
        if self.radioButton_2.isChecked():
            self.textBrowser.append("没有阶梯式或脉动式放弃功能")
        if self.radioButton_4.isChecked():
            self.textBrowser.append("没有提示功能")
        if self.radioButton_6.isChecked():
            self.textBrowser.append("没有放气动作")
        if self.textBrowser.toPlainText() == '':
            self.label_conform.setText("符合要求")
            self.label_conform.setStyleSheet("color: green ") # 符合要求用绿色显示结果
        else:
            self.label_conform.setText("不符合要求")
            self.label_conform.setStyleSheet("color: red ") # 不符合要求用红色显示结果
            self.textBrowser.show()
        self.label_conform.show()

    def save_file(self):
        # 保存文件
        with open(self.path, 'w', encoding='utf-8') as writers:
            if self.is_valid:
                # 符合要求
                writers.write('    符合要求\n')
            else:
                writers.write('    不符合要求,备注: ')
                content = self.textBrowser.toPlainText().replace('\n', ';    ')
                writers.write(content)

    def b_clear(self):
        # 还原按钮
        self.is_valid = True
        self.textBrowser.clear()
        self.label.clear()
        self.label_2.clear()
        self.label_conform.hide()
        self.textBrowser.hide()

    def closeEvent(self, event):
        # 重载界面关闭事件
        self.father.resize(800, 400)
        event.accept()


# if __name__ == "__main__":
#     import sys
#
#     app = QtWidgets.QApplication(sys.argv)
#     gui = UI_B()
#     gui.show()
#     sys.exit(app.exec_())

