# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import os
import pic_rc
import time

global time_start, time_end # 全局变量，计算计时间隔


def c_2():
    # 15s时启动计时器按钮
    global time_start
    time_start = time.time()


class UI_C(QtWidgets.QMainWindow):
    def __init__(self, fa):
        super(UI_C, self).__init__()
        self.is_valid = True # 当前功能检测结果是否符合要求
        self.DATA = {} # 保存当前页面的数据信息
        self.father = fa # 父界面，即系统主界面
        self.path = './tmp/c.txt' # 当前功能实验结果临时文件
        self.setupUi(self)

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(800, 410)
        self.textBrowser_1 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_1.setGeometry(QtCore.QRect(10, 0, 410, 60))
        self.textBrowser_1.setStyleSheet("background-color:yellow")
        self.textBrowser_1.setObjectName("textBrowser_1")
        self.gridLayoutWidget = QtWidgets.QWidget(Form)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(20, 70, 391, 81))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_t_max = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_t_max.setObjectName("label_t_max")
        self.gridLayout.addWidget(self.label_t_max, 0, 0, 1, 1)
        self.label_t_min = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_t_min.setObjectName("label_t_min")
        self.gridLayout.addWidget(self.label_t_min, 1, 0, 1, 1)
        self.label_in_para = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_in_para.setObjectName("label_in_para")
        self.gridLayout.addWidget(self.label_in_para, 2, 0, 1, 1)
        self.lineEdit_t_min = QtWidgets.QLineEdit(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_t_min.sizePolicy().hasHeightForWidth())
        self.lineEdit_t_min.setSizePolicy(sizePolicy)
        self.lineEdit_t_min.setObjectName("lineEdit_t_min")
        self.gridLayout.addWidget(self.lineEdit_t_min, 1, 1, 1, 1)
        self.pushButton_tourniquet = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pushButton_tourniquet.setMinimumSize(QtCore.QSize(60, 0))
        self.pushButton_tourniquet.setObjectName("pushButton_tourniquet")
        self.gridLayout.addWidget(self.pushButton_tourniquet, 2, 1, 1, 1)
        self.lineEdit_t_max = QtWidgets.QLineEdit(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_t_max.sizePolicy().hasHeightForWidth())
        self.lineEdit_t_max.setSizePolicy(sizePolicy)
        self.lineEdit_t_max.setObjectName("lineEdit_t_max")
        self.gridLayout.addWidget(self.lineEdit_t_max, 0, 1, 1, 1)
        self.textBrowser_2 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 160, 410, 60))
        self.textBrowser_2.setStyleSheet("background-color:yellow\n"
                                         "")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.frame_1 = QtWidgets.QFrame(Form)
        self.frame_1.setGeometry(QtCore.QRect(9, 65, 411, 90))
        self.frame_1.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_1.setLineWidth(1)
        self.frame_1.setMidLineWidth(0)
        self.frame_1.setObjectName("frame_1")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(20, 230, 391, 121))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_start = QtWidgets.QLabel(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_start.sizePolicy().hasHeightForWidth())
        self.label_start.setSizePolicy(sizePolicy)
        self.label_start.setObjectName("label_start")
        self.gridLayout_2.addWidget(self.label_start, 0, 0, 1, 1)
        self.pushButton_start = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_start.setObjectName("pushButton_start")
        self.gridLayout_2.addWidget(self.pushButton_start, 0, 1, 1, 1)
        self.pushButton_end = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_end.setObjectName("pushButton_end")
        self.gridLayout_2.addWidget(self.pushButton_end, 1, 1, 1, 1)
        self.label_end = QtWidgets.QLabel(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_end.sizePolicy().hasHeightForWidth())
        self.label_end.setSizePolicy(sizePolicy)
        self.label_end.setObjectName("label_end")
        self.gridLayout_2.addWidget(self.label_end, 1, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(9, 225, 411, 130))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(1)
        self.frame_2.setMidLineWidth(0)
        self.frame_2.setObjectName("frame_2")
        self.label_error = QtWidgets.QLabel(Form)
        self.label_error.setGeometry(QtCore.QRect(20, 370, 171, 20))
        self.label_error.setObjectName("label_error")
        self.label_data = QtWidgets.QLabel(Form)
        self.label_data.setGeometry(QtCore.QRect(210, 370, 151, 20))
        self.label_data.setObjectName("label_data")
        self.label_conform = QtWidgets.QLabel(Form)
        self.label_conform.setGeometry(QtCore.QRect(650, 220, 130, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_conform.setFont(font)
        self.label_conform.setStyleSheet("")
        self.label_conform.setText("")
        self.label_conform.setObjectName("label_conform")
        self.pushButton_clear = QtWidgets.QPushButton(Form)
        self.pushButton_clear.setGeometry(QtCore.QRect(440, 370, 70, 30))
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_return = QtWidgets.QPushButton(Form)
        self.pushButton_return.setGeometry(QtCore.QRect(700, 370, 80, 30))
        self.pushButton_return.setObjectName("pushButton_return")
        self.label_png = QtWidgets.QLabel(Form)
        self.label_png.setGeometry(QtCore.QRect(440, 0, 340, 210))
        self.label_png.setText("")
        self.label_png.setPixmap(QtGui.QPixmap(":/resources/device.png"))
        self.label_png.setScaledContents(True)
        self.label_png.setObjectName("label_png")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(440, 220, 121, 30))
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("")
        self.pushButton.setObjectName("pushButton")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(440, 250, 341, 111))
        self.textBrowser.setStyleSheet("color:red\n"
                                         "")
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_save = QtWidgets.QPushButton(Form)
        self.pushButton_save.setGeometry(QtCore.QRect(570, 370, 70, 30))
        self.pushButton_save.setObjectName("pushButton_save")
        self.frame_2.raise_()
        self.frame_1.raise_()
        self.textBrowser_1.raise_()
        self.gridLayoutWidget.raise_()
        self.textBrowser_2.raise_()
        self.gridLayoutWidget_2.raise_()
        self.label_error.raise_()
        self.label_data.raise_()
        self.label_conform.raise_()
        self.pushButton_clear.raise_()
        self.pushButton_return.raise_()
        self.label_png.raise_()
        self.pushButton.raise_()
        self.textBrowser.raise_()
        self.pushButton_save.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle("止血时间检查") # 界面标题名
        self.textBrowser_1.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(1)将中号止血袖带缠绕至中号硬质圆柱上</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(2)按图连接止血带机和标准器</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(3)打开连接压力标准器和止血袖带气路开关3和4，关闭其他气路开关</p></body></html>"))
        self.label_t_max.setText(_translate("Form", "最大设定止血时间(s)"))
        self.label_t_min.setText(_translate("Form", "最小设定止血时间(s)"))
        self.label_in_para.setText(_translate("Form", "输入止血带参数"))
        self.pushButton_tourniquet.setText(_translate("Form", "确认"))
        self.textBrowser_2.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(1)设置止血带机止血压力为30kPa</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(2)止血时间为5min，启动止血带机工作</p>\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">(3)等待充气完成，实时观察计时器数值</p></body></html>"))
        self.label_start.setText(_translate("Form", "待止血带机止血时间计时开始15s时，\n"
                                                    "快速按压标准器计时器启动键"))
        self.pushButton_start.setText(_translate("Form", "计时器\n"
                                                         "启动键"))
        self.pushButton_end.setText(_translate("Form", "计时器\n"
                                                       "停止键"))
        self.label_end.setText(_translate("Form", "待止血带机5min止血时间结束时，\n"
                                                  "快速按压标准器计时器停止键"))
        self.label_error.setText(_translate("Form", "止血时间绝对误差"))
        # self.label_data.setText(_translate("Form", "5min 0s"))
        self.pushButton_clear.setText(_translate("Form", "还原"))
        self.pushButton_return.setText(_translate("Form", "返回"))
        self.pushButton.setText(_translate("Form", "检查结果"))
        self.textBrowser.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.pushButton_save.setText(_translate("Form", "保存"))
        # -----------------------------------初始化，调整文本框可视-------------------------------------------
        self.label_conform.hide()
        self.label_data.hide()
        self.textBrowser.hide()
        # --------------------------------------------------------------------------------------------------

        # ----------------------------------------绑定按钮槽函数---------------------------------------------
        self.pushButton_tourniquet.clicked.connect(self.c_1)
        self.pushButton_start.clicked.connect(c_2)
        self.pushButton_end.clicked.connect(self.c_3)
        self.pushButton.clicked.connect(self.c_over)
        self.pushButton_clear.clicked.connect(self.c_clear)
        self.pushButton_save.clicked.connect(self.save_file)
        # --------------------------------------------------------------------------------------------------

        # 返回主程序
        self.pushButton_return.clicked.connect(lambda: {self.father.show(), self.close()})

        # 创建一个临时txt
        if os.path.exists(self.path):
            os.remove(self.path)
        file = open(self.path, 'w')
        file.close()

    def c_1(self):
        # 输入相应参数
        # 如果是数字，先判断是否填写了，如果填写了再判断是否为数字形式
        # 不符合要求进行对话框提醒
        if self.lineEdit_t_max.text() == '' or self.lineEdit_t_min.text() == '':
            QMessageBox.information(self, 'info', '请输入止血带参数')
            return
        if self.lineEdit_t_max.text().replace(".", "").isdigit():
            self.DATA['最大值'] = float(self.lineEdit_t_max.text())
        else:
            QMessageBox.information(self, 'info', '请输入正确的参数')
            return
        if self.lineEdit_t_min.text().replace(".", "").isdigit():
            self.DATA['最小值'] = float(self.lineEdit_t_min.text())
        else:
            QMessageBox.information(self, 'info', '请输入正确的参数')
            return
        if self.DATA['最大值'] >= 120 or self.DATA['最小值'] <= 5:
            self.is_valid = False
            self.textBrowser.append(
                "止血带参数不合格,最大时间" + self.lineEdit_t_max.text() + "s,最小时间" + self.lineEdit_t_min.text() + "s")

    def c_3(self):
        # 5min时计时停止按钮
        global time_end, time_start
        time_end = time.time()
        # 取整
        T = 5 * 60 - 15
        t = time_end - time_start
        # 判断是否有保存了最大值，即是否点了“确认”按钮
        if '最大值' in self.DATA:
            time_error = abs(T - t) / T * self.DATA['最大值']
            m = time_error // 60
            s = time_error - m * 60
            if m:
                self.label_data.setText(str(m) + "min  " + f'{s:.2f}' + "s")
            else:
                self.label_data.setText(f'{s:.2f}' + "s")
            self.label_data.show()

            #
            if abs(time_error) > 60:
                self.is_valid = False
                self.textBrowser.append("止血时间绝对误差过大,为" + self.label_data.text())
        else:
            QMessageBox.information(self, 'info', '请确认输入了最大止血时间')
            return

    def c_over(self):
        # 查询检查结果按钮
        if self.textBrowser.toPlainText() == '':
            self.label_conform.setText("符合要求")
            self.label_conform.setStyleSheet("color: green ")
        else:
            self.label_conform.setText("不符合要求")
            self.label_conform.setStyleSheet("color: red ")
            self.textBrowser.show()
        self.label_conform.show()

    def c_clear(self):
        # 还原按钮
        self.is_valid = True
        self.lineEdit_t_min.clear()
        self.lineEdit_t_max.clear()
        self.textBrowser.clear()
        self.textBrowser.hide()
        self.label_conform.hide()
        self.label_data.hide()
    
    def save_file(self):
        # 保存文件
        with open(self.path, 'w', encoding='utf-8') as writers:
            if self.textBrowser.toPlainText() == '':
                # 符合要求
                writers.write('    符合要求\n')
            else:
                writers.write('    不符合要求,备注: ')
                content = self.textBrowser.toPlainText().replace('\n', ';    ')
                writers.write(content)

    def closeEvent(self, event):
        # 重载界面关闭事件
        self.father.resize(800, 400)
        event.accept()


# if __name__ == "__main__":
#     import sys

#     app = QtWidgets.QApplication(sys.argv)
#     gui = UI_C()
#     gui.show()
#     sys.exit(app.exec_())
